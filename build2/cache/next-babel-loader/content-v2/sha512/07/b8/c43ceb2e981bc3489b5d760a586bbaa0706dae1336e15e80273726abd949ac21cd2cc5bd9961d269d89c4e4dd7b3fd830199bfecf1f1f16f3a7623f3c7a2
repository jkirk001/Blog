{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../../Components/Layout/Layout\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport styles from \"./singlePage.module.css\";\nimport PostBody from \"../../Components/Blog/PostBody/PostBody\";\nimport HeaderDisplay from \"../../Components/Blog/Header/HeaderDisplay/HeaderDisplay\";\nimport { Fragment } from \"react\";\n\nconst Display = props => {\n  const posts = _objectSpread({}, props.post[0]);\n\n  const author = _objectSpread({}, posts.author);\n\n  const tags = [...posts.tags];\n  const title = posts.title;\n  const quip = posts.quip;\n  const mainImg = posts.mainImg;\n  const body = posts.body;\n  /* console.log(posts);\n  console.log(`author: ${author}`);\n  console.log(`tags: ${tags}`);\n  console.log(`title: ${title}`);\n  console.log(`quip: ${quip}`);\n  console.log(`mainImg: ${mainImg}`); */\n\n  let display = /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.singlePost,\n      children: [/*#__PURE__*/_jsx(HeaderDisplay, {\n        author: author,\n        title: title,\n        tags: tags,\n        mainImg: mainImg\n      }), /*#__PURE__*/_jsx(PostBody, {\n        body: body,\n        quip: quip\n      })]\n    })\n  });\n\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: display\n  });\n};\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const id = params.pid;\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dataFinal = finalPosts.filter((item, index) => {\n    return item._id === id;\n  });\n\n  if (dataFinal.length === 0) {\n    return {\n      notFound: true\n    };\n  }\n\n  console.log(dataFinal);\n  return {\n    props: {\n      post: dataFinal\n    },\n    notFound: false,\n    revalidate: 10\n  };\n}\nexport async function getStaticPaths() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dynamicPaths = finalPosts.map((item, index) => {\n    return {\n      params: {\n        pid: item._id\n      }\n    };\n  });\n  return {\n    paths: dynamicPaths,\n    fallback: true\n  };\n}\nexport default Display; //!Array we get from DB\n\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:09:45 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'React', 'Mongo', 'Next' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cbde8172000667834400',\n    title: 'Tester 1',\n    quip: 'Tester 1',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:14 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc358172000667834401',\n    title: 'TESTER 2',\n    quip: 'Tester 2',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:52 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'Next', 'Mongo' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc648172000667834402',\n    title: 'TESTER 3',\n    quip: 'tester 3',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:14:40 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'Express', 'JS', 'Node' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063e9265d575e08a28d002d',\n    title: 'TESTER 4',\n    quip: 'Teester 4',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!After matching to an ID\n\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!pid pathways\n\n/*\n[\n  { params: { pid: '6063cbde8172000667834400' } },\n  { params: { pid: '6063cc358172000667834401' } },\n  { params: { pid: '6063cc648172000667834402' } },\n  { params: { pid: '6063e9265d575e08a28d002d' } },\n  { params: { pid: '6063ea0c5d575e08a28d002e' } }\n]\n\n*/","map":null,"metadata":{},"sourceType":"module"}
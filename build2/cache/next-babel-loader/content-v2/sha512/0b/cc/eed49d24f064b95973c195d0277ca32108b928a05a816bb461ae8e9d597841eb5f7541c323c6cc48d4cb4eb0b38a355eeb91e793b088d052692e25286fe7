{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/[pid]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../../Components/Layout/Layout\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport styles from \"./singlePage.module.css\";\nimport PostBody from \"../../Components/Blog/PostBody/PostBody\";\nimport HeaderDisplay from \"../../Components/Blog/Header/HeaderDisplay/HeaderDisplay\";\nimport { Fragment } from \"react\";\n\nconst Display = props => {\n  const posts = _objectSpread({}, props.post);\n\n  const author = _objectSpread({}, posts.author);\n\n  const tags = [...posts.tags];\n  const title = posts.title;\n  const quip = posts.quip;\n  const mainImg = posts.mainImg;\n  const body = posts.body;\n  /* console.log(posts);\n  console.log(`author: ${author}`);\n  console.log(`tags: ${tags}`);\n  console.log(`title: ${title}`);\n  console.log(`quip: ${quip}`);\n  console.log(`mainImg: ${mainImg}`); */\n\n  let display = /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.singlePost,\n      children: [/*#__PURE__*/_jsxDEV(HeaderDisplay, {\n        author: author,\n        title: title,\n        tags: tags,\n        mainImg: mainImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n        body: body,\n        quip: quip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const id = params.pid;\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dataFinal = finalPosts.filter((item, index) => {\n    return item._id === id;\n  });\n\n  if (dataFinal.length === 0) {\n    return {\n      notFound: true\n    };\n  }\n\n  console.log(dataFinal);\n  return {\n    props: {\n      post: dataFinal[0]\n    },\n    notFound: false,\n    revalidate: 10\n  };\n}\nexport async function getStaticPaths() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dynamicPaths = finalPosts.map((item, index) => {\n    return {\n      params: {\n        pid: item._id\n      }\n    };\n  });\n  return {\n    paths: dynamicPaths,\n    fallback: false\n  };\n}\nexport default Display; //!Array we get from DB\n\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:09:45 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'React', 'Mongo', 'Next' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cbde8172000667834400',\n    title: 'Tester 1',\n    quip: 'Tester 1',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:14 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc358172000667834401',\n    title: 'TESTER 2',\n    quip: 'Tester 2',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:52 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'Next', 'Mongo' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc648172000667834402',\n    title: 'TESTER 3',\n    quip: 'tester 3',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:14:40 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'Express', 'JS', 'Node' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063e9265d575e08a28d002d',\n    title: 'TESTER 4',\n    quip: 'Teester 4',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!After matching to an ID\n\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!pid pathways\n\n/*\n[\n  { params: { pid: '6063cbde8172000667834400' } },\n  { params: { pid: '6063cc358172000667834401' } },\n  { params: { pid: '6063cc648172000667834402' } },\n  { params: { pid: '6063e9265d575e08a28d002d' } },\n  { params: { pid: '6063ea0c5d575e08a28d002e' } }\n]\n\n*/","map":{"version":3,"sources":["/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/[pid]/index.js"],"names":["Layout","dbConnect","Blog","styles","PostBody","HeaderDisplay","Fragment","Display","props","posts","post","author","tags","title","quip","mainImg","body","display","singlePost","getStaticProps","context","params","id","pid","find","finalPosts","map","item","finalPost","toObject","_id","toString","date","dataFinal","filter","index","length","notFound","console","log","revalidate","getStaticPaths","dynamicPaths","paths","fallback"],"mappings":"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":["import Layout from \"../../Components/Layout/Layout\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport styles from \"./singlePage.module.css\";\nimport PostBody from \"../../Components/Blog/PostBody/PostBody\";\nimport HeaderDisplay from \"../../Components/Blog/Header/HeaderDisplay/HeaderDisplay\";\nimport { Fragment } from \"react\";\n\nconst Display = (props) => {\n  const posts = { ...props.post };\n  const author = { ...posts.author };\n  const tags = [...posts.tags];\n  const title = posts.title;\n  const quip = posts.quip;\n  const mainImg = posts.mainImg;\n  const body = posts.body;\n\n  /* console.log(posts);\n  console.log(`author: ${author}`);\n  console.log(`tags: ${tags}`);\n  console.log(`title: ${title}`);\n  console.log(`quip: ${quip}`);\n  console.log(`mainImg: ${mainImg}`); */\n\n  let display = (\n    <Layout>\n      <div className={styles.singlePost}>\n        <HeaderDisplay\n          author={author}\n          title={title}\n          tags={tags}\n          mainImg={mainImg}\n        />\n        <PostBody body={body} quip={quip} />\n      </div>\n    </Layout>\n  );\n\n  return <Fragment>{display}</Fragment>;\n};\n\nexport async function getStaticProps(context) {\n  const { params } = context;\n  const id = params.pid;\n  await dbConnect();\n  const posts = await Blog.find({});\n  //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map((item) => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dataFinal = finalPosts.filter((item, index) => {\n    return item._id === id;\n  });\n\n  if (dataFinal.length === 0) {\n    return {\n      notFound: true,\n    };\n  }\n  console.log(dataFinal);\n\n  return {\n    props: {\n      post: dataFinal[0],\n    },\n    notFound: false,\n    revalidate: 10,\n  };\n}\n\nexport async function getStaticPaths() {\n  await dbConnect();\n  const posts = await Blog.find({});\n  //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  const finalPosts = posts.map((item) => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  const dynamicPaths = finalPosts.map((item, index) => {\n    return { params: { pid: item._id } };\n  });\n\n  return {\n    paths: dynamicPaths,\n    fallback: false,\n  };\n}\n\nexport default Display;\n\n//!Array we get from DB\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:09:45 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'React', 'Mongo', 'Next' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cbde8172000667834400',\n    title: 'Tester 1',\n    quip: 'Tester 1',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:14 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc358172000667834401',\n    title: 'TESTER 2',\n    quip: 'Tester 2',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 18:11:52 GMT-0700 (Pacific Daylight Time)',\n      name: 'Jon',\n      read: 5\n    },\n    tags: [ 'Next', 'Mongo' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063cc648172000667834402',\n    title: 'TESTER 3',\n    quip: 'tester 3',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:14:40 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'Express', 'JS', 'Node' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063e9265d575e08a28d002d',\n    title: 'TESTER 4',\n    quip: 'Teester 4',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617148584/Blog%20Images/sort_ticpka.jpg',\n    __v: 0\n  },\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!After matching to an ID\n/*\n[\n  {\n    author: {\n      date: 'Tue Mar 30 2021 20:18:33 GMT-0700 (Pacific Daylight Time)',\n      name: 'Mikey',\n      read: 5\n    },\n    tags: [ 'Mongo', 'JS' ],\n    body: [ [Object], [Object], [Object] ],\n    _id: '6063ea0c5d575e08a28d002e',\n    title: 'TESTER 5',\n    quip: 'tester 5',\n    mainImg: 'https://res.cloudinary.com/dxtqihvgt/image/upload/v1617145104/Blog%20Images/clickity_uj6qud.jpg',\n    __v: 0\n  }\n]\n*/\n//!pid pathways\n/*\n[\n  { params: { pid: '6063cbde8172000667834400' } },\n  { params: { pid: '6063cc358172000667834401' } },\n  { params: { pid: '6063cc648172000667834402' } },\n  { params: { pid: '6063e9265d575e08a28d002d' } },\n  { params: { pid: '6063ea0c5d575e08a28d002e' } }\n]\n\n*/\n"]},"metadata":{},"sourceType":"module"}
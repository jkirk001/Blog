{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport dbConnect from \"../utils/db-connect\";\nimport Blog from \"../Models/blogpost\";\nimport Layout from \"../Components/Layout/Layout\";\nimport Search from \"../Components/Search/Search\";\nimport Recent from \"../Components/Recent/Recent\";\nimport React, { useContext } from \"react\";\nimport { ModeContext } from \"../Context/context\";\n\nconst Home = props => {\n  //const { data } = useContext(ModeContext);\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(Recent, {\n      data: props.posts\n    }), /*#__PURE__*/_jsx(Search, {\n      data: props.posts\n    })]\n  });\n};\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n  //?It cant parse non-seralizable data -- must expand nested objects, this is more explicit\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  return {\n    props: {\n      posts: finalPosts\n    },\n    revalidate: 10\n  };\n}\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}
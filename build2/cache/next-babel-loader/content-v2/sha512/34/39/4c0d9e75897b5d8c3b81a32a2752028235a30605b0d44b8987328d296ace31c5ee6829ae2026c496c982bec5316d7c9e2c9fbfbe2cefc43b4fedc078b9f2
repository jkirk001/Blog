{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport LinkCardRow from \"../../Components/UI/CardDisplay/LinkCardRow/LinkCardRow\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport styles from \"./allPosts.module.css\";\n\nconst allPosts = props => {\n  const {\n    posts\n  } = props;\n  const display = posts.map(item => {\n    return /*#__PURE__*/_jsx(LinkCardRow, {\n      data: item\n    }, item._id);\n  });\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"All Posts -- Newest To Oldest\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.listAll,\n      children: display\n    })]\n  });\n};\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n  //?It cant parse non-seralizable data -- must expand nested objects, this is more explicit\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  return {\n    props: {\n      posts: finalPosts\n    },\n    revalidate: 10\n  };\n}\nexport default allPosts;","map":null,"metadata":{},"sourceType":"module"}
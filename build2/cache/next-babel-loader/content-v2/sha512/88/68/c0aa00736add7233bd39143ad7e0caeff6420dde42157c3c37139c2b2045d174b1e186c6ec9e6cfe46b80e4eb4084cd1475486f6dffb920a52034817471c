{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/chron/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Layout from \"../../Components/Layout/Layout\";\nimport styles from \"./chron.module.css\";\nimport { useEffect, useState } from \"react\";\nimport LinkCardRow from \"../../Components/UI/CardDisplay/LinkCardRow/LinkCardRow\";\nimport insertionSort from \"../../utils/insertionSort\";\nimport TrailCol from \"../../Components/UI/Animations/Trail-Col\";\n\nvar chron = function chron(props) {\n  _s();\n\n  var _useState = useState(),\n      display = _useState[0],\n      setDisplay = _useState[1];\n\n  var _useState2 = useState(),\n      year = _useState2[0],\n      setYear = _useState2[1];\n\n  var _useState3 = useState(),\n      month = _useState3[0],\n      setMonth = _useState3[1];\n\n  useEffect(function () {\n    //get isnertion sort to work correctly\n    var orderedArr = insertionSort(props.posts);\n    var filteredArray = orderedArr.filter(function (item, index) {\n      return parseInt(item.date.year) === parseInt(year);\n    });\n\n    if (month) {\n      var filteredArrayMonth = filteredArray.filter(function (item, index) {\n        return parseInt(item.date.month - 1) === parseInt(month);\n      });\n      setDisplay(filteredArrayMonth.reverse());\n      return;\n    } //setDisplay(filteredArray);\n\n\n    setDisplay(filteredArray.reverse());\n  }, [year, month]);\n\n  var yearHandler = function yearHandler(e) {\n    if (month) {\n      setMonth();\n      setYear(e.target.id);\n    }\n\n    setYear(e.target.id);\n  };\n\n  var monthHandler = function monthHandler(e) {\n    setMonth(e.target.id);\n  };\n\n  var content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"press a year\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }, _this);\n\n  if (display) {\n    content = display.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(LinkCardRow, {\n        data: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, _this);\n    });\n  }\n\n  var monthSpelled = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  var monthButton = monthSpelled.map(function (item, index) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: month === String(index) ? styles.monthButtonSelected : styles.monthButton,\n      id: index,\n      onClick: monthHandler,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.dateSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.yearButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: year === \"2021\" ? styles.yearRadioSelected : styles.yearRadio,\n          type: \"radio\",\n          id: \"2021\",\n          onClick: yearHandler,\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: year === \"2020\" ? styles.yearRadioSelected : styles.yearRadio,\n          id: \"2020\",\n          onClick: yearHandler,\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.monthButtons,\n        children: year ? monthButton : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.contentContainer,\n      children: /*#__PURE__*/_jsxDEV(TrailCol, {\n        open: open,\n        onClick: function onClick() {\n          return set(function (state) {\n            return !state;\n          });\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n}; //!Need to find a way to manupulate date in server end\n\n\n_s(chron, \"xIg7QAHtzQTK32HOi3PiFF1mZf8=\");\n\nexport var __N_SSG = true;\nexport default chron;","map":{"version":3,"sources":["/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/chron/index.js"],"names":["Layout","styles","useEffect","useState","LinkCardRow","insertionSort","TrailCol","chron","props","display","setDisplay","year","setYear","month","setMonth","orderedArr","posts","filteredArray","filter","item","index","parseInt","date","filteredArrayMonth","reverse","yearHandler","e","target","id","monthHandler","content","map","monthSpelled","monthButton","String","monthButtonSelected","dateSection","yearButtons","yearRadioSelected","yearRadio","monthButtons","contentContainer","open","set","state"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,WAAP,MAAwB,yDAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,0CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACOL,QAAQ,EADf;AAAA,MAChBM,OADgB;AAAA,MACPC,UADO;;AAAA,mBAECP,QAAQ,EAFT;AAAA,MAEhBQ,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGGT,QAAQ,EAHX;AAAA,MAGhBU,KAHgB;AAAA,MAGTC,QAHS;;AAKvBZ,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMa,UAAU,GAAGV,aAAa,CAACG,KAAK,CAACQ,KAAP,CAAhC;AAEA,QAAMC,aAAa,GAAGF,UAAU,CAACG,MAAX,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvD,aAAOC,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAUX,IAAX,CAAR,KAA6BU,QAAQ,CAACV,IAAD,CAA5C;AACD,KAFqB,CAAtB;;AAIA,QAAIE,KAAJ,EAAW;AACT,UAAMU,kBAAkB,GAAGN,aAAa,CAACC,MAAd,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/D,eAAOC,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAUT,KAAV,GAAkB,CAAnB,CAAR,KAAkCQ,QAAQ,CAACR,KAAD,CAAjD;AACD,OAF0B,CAA3B;AAGAH,MAAAA,UAAU,CAACa,kBAAkB,CAACC,OAAnB,EAAD,CAAV;AACA;AACD,KAda,CAed;;;AACAd,IAAAA,UAAU,CAACO,aAAa,CAACO,OAAd,EAAD,CAAV;AACD,GAjBQ,EAiBN,CAACb,IAAD,EAAOE,KAAP,CAjBM,CAAT;;AAmBA,MAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzB,QAAIb,KAAJ,EAAW;AACTC,MAAAA,QAAQ;AACRF,MAAAA,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,EAAV,CAAP;AACD;;AACDhB,IAAAA,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,EAAV,CAAP;AACD,GAND;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAO;AAC1BZ,IAAAA,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,EAAV,CAAR;AACD,GAFD;;AAIA,MAAIE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAd;;AACA,MAAIrB,OAAJ,EAAa;AACXqB,IAAAA,OAAO,GAAGrB,OAAO,CAACsB,GAAR,CAAY,UAACZ,IAAD,EAAOC,KAAP,EAAiB;AACrC,0BAAO,QAAC,WAAD;AAAyB,QAAA,IAAI,EAAED;AAA/B,SAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFS,CAAV;AAGD;;AACD,MAAMY,YAAY,GAAG,CACnB,KADmB,EAEnB,KAFmB,EAGnB,OAHmB,EAInB,OAJmB,EAKnB,KALmB,EAMnB,MANmB,EAOnB,MAPmB,EAQnB,KARmB,EASnB,MATmB,EAUnB,KAVmB,EAWnB,KAXmB,EAYnB,KAZmB,CAArB;AAcA,MAAIC,WAAW,GAAGD,YAAY,CAACD,GAAb,CAAiB,UAACZ,IAAD,EAAOC,KAAP,EAAiB;AAClD,wBACE;AACE,MAAA,SAAS,EACPP,KAAK,KAAKqB,MAAM,CAACd,KAAD,CAAhB,GACInB,MAAM,CAACkC,mBADX,GAEIlC,MAAM,CAACgC,WAJf;AAME,MAAA,EAAE,EAAEb,KANN;AAOE,MAAA,OAAO,EAAES,YAPX;AAAA,gBAUGV;AAVH,OAQOC,KARP;AAAA;AAAA;AAAA;AAAA,aADF;AAcD,GAfiB,CAAlB;AAgBA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAS,MAAA,SAAS,EAAEnB,MAAM,CAACmC,WAA3B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEnC,MAAM,CAACoC,WAAvB;AAAA,gCACE;AACE,UAAA,SAAS,EACP1B,IAAI,KAAK,MAAT,GAAkBV,MAAM,CAACqC,iBAAzB,GAA6CrC,MAAM,CAACsC,SAFxD;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,EAAE,EAAC,MALL;AAME,UAAA,OAAO,EAAEd,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAYE;AACE,UAAA,SAAS,EACPd,IAAI,KAAK,MAAT,GAAkBV,MAAM,CAACqC,iBAAzB,GAA6CrC,MAAM,CAACsC,SAFxD;AAIE,UAAA,EAAE,EAAC,MAJL;AAKE,UAAA,OAAO,EAAEd,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAuBE;AAAK,QAAA,SAAS,EAAExB,MAAM,CAACuC,YAAvB;AAAA,kBAAsC7B,IAAI,GAAGsB,WAAH,GAAiB;AAA3D;AAAA;AAAA;AAAA;AAAA,eAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eA0BE;AAAS,MAAA,SAAS,EAAEhC,MAAM,CAACwC,gBAA3B;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEC,IAAhB;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMC,GAAG,CAAC,UAACC,KAAD;AAAA,mBAAW,CAACA,KAAZ;AAAA,WAAD,CAAT;AAAA,SAA/B;AAAA,kBACGd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkCD,CAzGD,C,CA2GA;;;GA3GMvB,K;;;AAuIN,eAAeA,KAAf","sourcesContent":["import Layout from \"../../Components/Layout/Layout\";\nimport styles from \"./chron.module.css\";\nimport { useEffect, useState } from \"react\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport LinkCardRow from \"../../Components/UI/CardDisplay/LinkCardRow/LinkCardRow\";\nimport insertionSort from \"../../utils/insertionSort\";\nimport TrailCol from \"../../Components/UI/Animations/Trail-Col\";\n\nconst chron = (props) => {\n  const [display, setDisplay] = useState();\n  const [year, setYear] = useState();\n  const [month, setMonth] = useState();\n\n  useEffect(() => {\n    //get isnertion sort to work correctly\n    const orderedArr = insertionSort(props.posts);\n\n    const filteredArray = orderedArr.filter((item, index) => {\n      return parseInt(item.date.year) === parseInt(year);\n    });\n\n    if (month) {\n      const filteredArrayMonth = filteredArray.filter((item, index) => {\n        return parseInt(item.date.month - 1) === parseInt(month);\n      });\n      setDisplay(filteredArrayMonth.reverse());\n      return;\n    }\n    //setDisplay(filteredArray);\n    setDisplay(filteredArray.reverse());\n  }, [year, month]);\n\n  const yearHandler = (e) => {\n    if (month) {\n      setMonth();\n      setYear(e.target.id);\n    }\n    setYear(e.target.id);\n  };\n  const monthHandler = (e) => {\n    setMonth(e.target.id);\n  };\n\n  let content = <p>press a year</p>;\n  if (display) {\n    content = display.map((item, index) => {\n      return <LinkCardRow key={index} data={item} />;\n    });\n  }\n  const monthSpelled = [\n    \"Jan\",\n    \"Feb\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let monthButton = monthSpelled.map((item, index) => {\n    return (\n      <button\n        className={\n          month === String(index)\n            ? styles.monthButtonSelected\n            : styles.monthButton\n        }\n        id={index}\n        onClick={monthHandler}\n        key={index}\n      >\n        {item}\n      </button>\n    );\n  });\n  return (\n    <Layout>\n      <section className={styles.dateSection}>\n        <div className={styles.yearButtons}>\n          <button\n            className={\n              year === \"2021\" ? styles.yearRadioSelected : styles.yearRadio\n            }\n            type=\"radio\"\n            id=\"2021\"\n            onClick={yearHandler}\n          >\n            2021\n          </button>\n\n          <button\n            className={\n              year === \"2020\" ? styles.yearRadioSelected : styles.yearRadio\n            }\n            id=\"2020\"\n            onClick={yearHandler}\n          >\n            2020\n          </button>\n        </div>\n        <div className={styles.monthButtons}>{year ? monthButton : null}</div>\n      </section>\n      <section className={styles.contentContainer}>\n        <TrailCol open={open} onClick={() => set((state) => !state)}>\n          {content}\n        </TrailCol>\n      </section>\n    </Layout>\n  );\n};\n\n//!Need to find a way to manupulate date in server end\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({});\n  const finalPosts = posts.map((item, index) => {\n    const date = item.author.date.toLocaleDateString().split(\"/\");\n    item = item.toObject();\n    const nearlyFinal = Object({\n      ...item,\n      date: {\n        month: date[0],\n        day: date[1],\n        year: date[2],\n      },\n    });\n    return nearlyFinal;\n  });\n  //stupid fix but it seems to be the one\n  const finalPostsFormatted = JSON.parse(JSON.stringify(finalPosts));\n  return {\n    props: {\n      posts: finalPostsFormatted,\n    },\n    revalidate: 10,\n  };\n}\n\nexport default chron;\n"]},"metadata":{},"sourceType":"module"}
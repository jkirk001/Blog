{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useTrail, a } from \"react-spring\";\nimport React, { useState } from \"react\";\n\nfunction TrailCol(_ref) {\n  let {\n    open,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"open\", \"children\"]);\n\n  const items = React.Children.toArray(children);\n  const trail = useTrail(items.length, {\n    config: {\n      mass: 5,\n      tension: 1500,\n      friction: 150\n    },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    height: open ? \"auto\" : \"auto\",\n    from: {\n      opacity: 0,\n      x: 20,\n      height: 0\n    }\n  });\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    className: \"trails-main-col\"\n  }, props), {}, {\n    children: trail.map((_ref2, index) => {\n      let {\n        x,\n        height\n      } = _ref2,\n          rest = _objectWithoutProperties(_ref2, [\"x\", \"height\"]);\n\n      return /*#__PURE__*/_jsx(a.div, {\n        className: \"trails-text-col\",\n        style: _objectSpread(_objectSpread({}, rest), {}, {\n          //transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n          transform: x.to(x => `translate3d(0,${x}px,0)`)\n        }),\n        children: /*#__PURE__*/_jsx(a.div, {\n          className: \"trails-main-col-cont\",\n          style: {\n            height\n          },\n          children: items[index]\n        })\n      }, items[index].key);\n    })\n  }));\n}\n\nexport default TrailCol;","map":null,"metadata":{},"sourceType":"module"}
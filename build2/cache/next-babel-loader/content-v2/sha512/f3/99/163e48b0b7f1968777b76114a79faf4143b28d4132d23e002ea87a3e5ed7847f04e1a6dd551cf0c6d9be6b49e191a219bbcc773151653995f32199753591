{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport dbConnect from \"../../utils/db-connect\";\nimport Blog from \"../../Models/blogpost\";\nimport styles from \"./topics.module.css\";\nimport { useEffect, useState } from \"react\";\nimport LinkCardRow from \"../../Components/UI/CardDisplay/LinkCardRow/LinkCardRow\";\nimport TrailCol from \"../../Components/UI/Animations/Trail-Col\";\n\nconst Topics = props => {\n  const {\n    0: found,\n    1: setFound\n  } = useState();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState();\n  const {\n    0: open,\n    1: set\n  } = useState(true);\n  useEffect(() => {\n    if (selected === \"react\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"React\");\n      });\n      setFound(display);\n    }\n\n    if (selected === \"next\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"Next\");\n      });\n      setFound(display);\n    }\n\n    if (selected === \"mongo\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"Mongo\");\n      });\n      setFound(display);\n    }\n\n    if (selected === \"js\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"JS\");\n      });\n      setFound(display);\n    }\n\n    if (selected === \"node\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"Node\");\n      });\n      setFound(display);\n    }\n\n    if (selected === \"express\") {\n      const display = props.posts.filter((item, index) => {\n        return item.tags.includes(\"Express\");\n      });\n      setFound(display);\n    }\n  }, [selected]);\n\n  const techHandler = e => {\n    setSelected(e.target.id);\n  };\n\n  let display = null;\n\n  if (found) {\n    display = found.map((item, index) => {\n      return /*#__PURE__*/_jsx(LinkCardRow, {\n        data: item\n      }, item._id);\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.topicsMain,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.tags,\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          id: \"react\",\n          src: \"/devLogos/React.svg\",\n          onClick: techHandler,\n          className: selected === \"react\" ? styles.tagSelected : styles.tag\n        }), /*#__PURE__*/_jsx(\"img\", {\n          id: \"next\",\n          src: \"/devLogos/Next.svg\",\n          onClick: techHandler,\n          className: selected === \"next\" ? styles.tagSelected : styles.tag\n        }), /*#__PURE__*/_jsx(\"img\", {\n          id: \"mongo\",\n          src: \"/devLogos/Mongo.svg\",\n          onClick: techHandler,\n          className: selected === \"mongo\" ? styles.tagSelected : styles.tag\n        }), /*#__PURE__*/_jsx(\"img\", {\n          id: \"js\",\n          src: \"/devLogos/JS.svg\",\n          onClick: techHandler,\n          className: selected === \"js\" ? styles.tagSelected : styles.tag\n        }), /*#__PURE__*/_jsx(\"img\", {\n          id: \"node\",\n          src: \"/devLogos/Node.svg\",\n          onClick: techHandler,\n          className: selected === \"node\" ? styles.tagSelected : styles.tag\n        }), /*#__PURE__*/_jsx(\"img\", {\n          id: \"express\",\n          src: \"/devLogos/Express.svg\",\n          onClick: techHandler,\n          className: selected === \"express\" ? styles.tagSelected : styles.tag\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.display,\n        children: /*#__PURE__*/_jsx(TrailCol, {\n          open: open,\n          onClick: () => set(state => !state),\n          children: display\n        })\n      })]\n    })\n  });\n};\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n\n  const finalPosts = JSON.parse(JSON.stringify(posts));\n  return {\n    props: {\n      posts: finalPosts\n    },\n    revalidate: 10\n  };\n}\nexport default Topics;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/index.js\";\nimport dbConnect from \"../utils/db-connect\";\nimport Blog from \"../Models/blogpost\";\nimport Layout from \"../Components/Layout/Layout\";\nimport Search from \"../Components/Search/Search\";\nimport Recent from \"../Components/Recent/Recent\";\nimport React, { useContext } from \"react\";\nimport { ModeContext } from \"../Context/context\";\n\nconst Home = props => {\n  //const { data } = useContext(ModeContext);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Recent, {\n      data: props.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      data: props.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({}); //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n  //?It cant parse non-seralizable data -- must expand nested objects, this is more explicit\n\n  const finalPosts = posts.map(item => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  return {\n    props: {\n      posts: finalPosts\n    },\n    revalidate: 10\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/pages/index.js"],"names":["dbConnect","Blog","Layout","Search","Recent","React","useContext","ModeContext","Home","props","posts","getStaticProps","find","finalPosts","map","item","finalPost","toObject","_id","toString","author","date","revalidate"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,KAAK,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,KAAK,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMX,SAAS,EAAf;AACA,QAAMU,KAAK,GAAG,MAAMT,IAAI,CAACW,IAAL,CAAU,EAAV,CAApB,CAFqC,CAGrC;AACA;AAEA;;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AACrC,QAAIC,SAAS,GAAGD,IAAI,CAACE,QAAL,EAAhB;AACAD,IAAAA,SAAS,CAACE,GAAV,GAAgBF,SAAS,CAACE,GAAV,CAAcC,QAAd,EAAhB;AACAH,IAAAA,SAAS,CAACI,MAAV,CAAiBC,IAAjB,GAAwBL,SAAS,CAACI,MAAV,CAAiBC,IAAjB,CAAsBF,QAAtB,EAAxB;AACA,WAAOH,SAAP;AACD,GALkB,CAAnB;AAMA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEG;AADF,KADF;AAILS,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAed,IAAf","sourcesContent":["import dbConnect from \"../utils/db-connect\";\nimport Blog from \"../Models/blogpost\";\nimport Layout from \"../Components/Layout/Layout\";\nimport Search from \"../Components/Search/Search\";\nimport Recent from \"../Components/Recent/Recent\";\nimport React, { useContext } from \"react\";\nimport { ModeContext } from \"../Context/context\";\n\nconst Home = (props) => {\n  //const { data } = useContext(ModeContext);\n  return (\n    <Layout>\n      <Recent data={props.posts} />\n      <Search data={props.posts} />\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  await dbConnect();\n  const posts = await Blog.find({});\n  //stupid fix but it seems to be the one\n  //const finalPosts = JSON.parse(JSON.stringify(posts));\n\n  //?It cant parse non-seralizable data -- must expand nested objects, this is more explicit\n  const finalPosts = posts.map((item) => {\n    let finalPost = item.toObject();\n    finalPost._id = finalPost._id.toString();\n    finalPost.author.date = finalPost.author.date.toString();\n    return finalPost;\n  });\n  return {\n    props: {\n      posts: finalPosts,\n    },\n    revalidate: 10,\n  };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[60],{qseY:function(e,a,n){\"use strict\";function i(e){e.languages.gedcom={\"line-value\":{pattern:/(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,lookbehind:!0,inside:{pointer:{pattern:/^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,alias:\"variable\"}}},tag:{pattern:/(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,lookbehind:!0,alias:\"string\"},level:{pattern:/(^\\s*)\\d+/m,lookbehind:!0,alias:\"number\"},pointer:{pattern:/@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,alias:\"variable\"}}}e.exports=i,i.displayName=\"gedcom\",i.aliases=[]}}]);","map":{"version":3,"sources":["static/chunks/react-syntax-highlighter_languages_refractor_gedcom.be339aff8a3ccd57ed0c.js"],"names":["window","push","qseY","module","exports","__webpack_require__","gedcom","Prism","languages","line-value","pattern","lookbehind","inside","pointer","alias","tag","level","displayName","aliases"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAASC,GAEjC,aAMA,SAASC,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,aAAc,CAEZC,QAAS,iFACTC,YAAY,EACZC,OAAQ,CACNC,QAAS,CACPH,QAAS,yDACTI,MAAO,cAIbC,IAAK,CAEHL,QAAS,6EACTC,YAAY,EACZG,MAAO,UAETE,MAAO,CACLN,QAAS,aACTC,YAAY,EACZG,MAAO,UAETD,QAAS,CACPH,QAAS,uDACTI,MAAO,aA7BbX,EAAOC,QAAUE,EACjBA,EAAOW,YAAc,SACrBX,EAAOY,QAAU"},"name":"static/chunks/react-syntax-highlighter_languages_refractor_gedcom.be339aff8a3ccd57ed0c.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[60],{\n\n/***/ \"qseY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^\\s*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/node_modules/refractor/lang/gedcom.js"],"names":[],"mappings":";;;;;;AAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY,EAAE;AAClE;AACA;AACA;AACA,4CAA4C,YAAY,EAAE;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,YAAY,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,YAAY,EAAE;AACrD;AACA;AACA;AACA","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^\\s*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n"]}}
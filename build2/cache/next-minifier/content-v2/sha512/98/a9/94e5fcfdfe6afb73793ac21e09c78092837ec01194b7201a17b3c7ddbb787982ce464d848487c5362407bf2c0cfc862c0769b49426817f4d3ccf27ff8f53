{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[25],{\"80K2\":function(n,a,e){\"use strict\";function t(n){n.languages.arff={comment:/%.*/,string:{pattern:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},keyword:/@(?:attribute|data|end|relation)\\b/i,number:/\\b\\d+(?:\\.\\d+)?\\b/,punctuation:/[{},]/}}n.exports=t,t.displayName=\"arff\",t.aliases=[]}}]);","map":{"version":3,"sources":["static/chunks/react-syntax-highlighter_languages_refractor_arff.9b445b7793c65fd61a9f.js"],"names":["window","push","80K2","module","exports","__webpack_require__","arff","Prism","languages","comment","string","pattern","greedy","keyword","number","punctuation","displayName","aliases"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,OACA,SAAUC,EAAQC,EAASC,GAEjC,aAMA,SAASC,EAAKC,GACZA,EAAMC,UAAUF,KAAO,CACrBG,QAAS,MACTC,OAAQ,CACNC,QAAS,mCACTC,QAAQ,GAEVC,QAAS,sCACTC,OAAQ,oBACRC,YAAa,SAZjBZ,EAAOC,QAAUE,EACjBA,EAAKU,YAAc,OACnBV,EAAKW,QAAU"},"name":"static/chunks/react-syntax-highlighter_languages_refractor_arff.9b445b7793c65fd61a9f.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[25],{\n\n/***/ \"80K2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/jonathankirkpatrick/Desktop/Hired/evronBlog/evronblog/node_modules/refractor/lang/arff.js"],"names":[],"mappings":";;;;;;AAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB;AACrB;AACA","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n"]}}